{
  "script": "return ((controlSelector, done) => {\n        const waitForUI5Options = Object.assign({}, window.wdi5.waitForUI5Options)\n        if (controlSelector.timeout) {\n            waitForUI5Options.timeout = controlSelector.timeout\n        }\n\n        window.wdi5.waitForUI5(\n            waitForUI5Options,\n            () => {\n                window.wdi5.Log.info(\"[browser wdi5] locating \" + JSON.stringify(controlSelector))\n                controlSelector.selector = window.wdi5.createMatcher(controlSelector.selector)\n                window.bridge\n                    .findAllDOMElementsByControlSelector(controlSelector)\n                    .then((domElements) => {\n                        // window.wdi5.Log.info('[browser wdi5] control located! - Message: ' + JSON.stringify(domElement));\n                        // ui5 control\n                        let returnElements = []\n                        domElements.forEach((domElement) => {\n                            const ui5Control = window.wdi5.getUI5CtlForWebObj(domElement)\n                            const id = ui5Control.getId()\n                            window.wdi5.Log.info(`[browser wdi5] control with id: ${id} located!`)\n                            const aProtoFunctions = window.wdi5.retrieveControlMethods(ui5Control)\n                            // @type [String, String?, String, \"Array of Strings\"]\n                            returnElements.push({ domElement: domElement, id: id, aProtoFunctions: aProtoFunctions })\n                        })\n\n                        done({ status: 0, result: returnElements })\n                    })\n                    .catch(window.wdi5.errorHandling.bind(this, done))\n            },\n            window.wdi5.errorHandling.bind(this, done)\n        )\n    }).apply(null, arguments)",
  "args": [
    {
      "selector": {
        "controlType": "sap.m.Button"
      },
      "wdio_ui5_key": "sapm.Button"
    }
  ]
}